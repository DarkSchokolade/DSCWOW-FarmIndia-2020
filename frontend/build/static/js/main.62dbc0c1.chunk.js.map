{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/UserEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productTopRated","productReviewCreate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","errorProductReview","successProductReview","alert","ListGroup","ListGroupItem","countInStock","disabled","length","review","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","varient","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","console","log","redirect","login","RegisterScreen","setName","ConfirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","substring","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","loadingUpdate","errorUpdate","successUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","UserEditScreen","userId","setIsAdmin","loadinUpdate","updateUser","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.62dbc0c1.chunk.js","sourcesContent":["import  { createStore,combineReducers,applyMiddleware  } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension' \r\nimport {productListReducer,productDetailsReducer,productDeleteReducer, productCreateReducer, productUpdateReducer,productReviewCreateReducer,productTopRatedReducer } from './reducers/productReducers.js'\r\nimport {cartReducer } from './reducers/cartReducers'\r\nimport {userLoginReducer ,userRegisterReducer , userDetailsReducer,userUpdateProfileReducer,userListReducer,userDeleteReducer,userUpdateReducer} from './reducers/userReducers'\r\nimport { orderCreateReducers, orderDetailsReducers,orderPayReducer,orderListMyReducer, orderListReducer, orderDeliverReducer} from './reducers/orderReducers.js'\r\n\r\n\r\n\r\nconst reducer =combineReducers({\r\n    productList : productListReducer,\r\n    productDetails : productDetailsReducer,\r\n    productDelete : productDeleteReducer,\r\n    productCreate : productCreateReducer,\r\n    productUpdate : productUpdateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    productReviewCreate : productReviewCreateReducer,\r\n    cart : cartReducer,\r\n    userLogin : userLoginReducer,\r\n    userRegister : userRegisterReducer,\r\n    userDetails : userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList : userListReducer,\r\n    userDelete : userDeleteReducer,\r\n    userUpdate : userUpdateReducer,\r\n    orderCreate : orderCreateReducers,\r\n    orderDetails: orderDetailsReducers,\r\n    orderPay : orderPayReducer,\r\n    orderDeliver : orderDeliverReducer,\r\n    orderListMy : orderListMyReducer,\r\n    orderList : orderListReducer,\r\n\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')):[]\r\n//const orderItemsFromStorage = localStorage.getItem('orderItems') ? JSON.parse(localStorage.getItem('orderItems')):[]\r\n\r\n// const initialState = {\r\n//     cart: { cartItems: cartItemsFromStorage}\r\n// }\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')):null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')):{}\r\n\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage},\r\n    userLogin : {userInfo:userInfoFromStorage},\r\n    //orderDetails :{orderItems: orderItemsFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n","import {PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST,PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,PRODUCT_CREATE_FAIL,PRODUCT_CREATE_REQUEST,PRODUCT_CREATE_RESET,PRODUCT_CREATE_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_RESET,\r\nPRODUCT_CREATE_REVIEW_REQUEST,PRODUCT_CREATE_REVIEW_FAIL,PRODUCT_CREATE_REVIEW_SUCCESS,PRODUCT_CREATE_REVIEW_RESET,\r\nPRODUCT_TOP_FAIL,PRODUCT_TOP_SUCCESS,PRODUCT_TOP_REQUEST} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state ={products : []},action)=>{\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading : true,products:[]}\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {loading : false , products: action.payload.products , pages:action.payload.pages , page:action.payload.page}\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading:false, error : action.payload}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const productDetailsReducer = (state ={product : {reviews:[]}},action)=>{\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading : true,...state}\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading : false , product: action.payload}\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading:false, error : action.payload}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state ={},action)=>{\r\n    switch(action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {loading : true}\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {loading : false , success: true}\r\n        case PRODUCT_DELETE_FAIL:\r\n            return {loading:false, error : action.payload}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const productCreateReducer = (state ={},action)=>{\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return {loading : true}\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return {loading : false , success: true , product : action.payload}\r\n        case PRODUCT_CREATE_FAIL:\r\n            return {loading:false, error : action.payload}\r\n        case PRODUCT_CREATE_RESET : \r\n        return {}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state ={product : {}},action)=>{\r\n    switch(action.type){\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return {loading : true}\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return {loading : false , success: true , product : action.payload}\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return {loading:false, error : action.payload}\r\n        case PRODUCT_UPDATE_RESET : \r\n        return { product: {}}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const productReviewCreateReducer = (state ={ },action)=>{\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return {loading : true}\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return {loading : false , success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return {loading:false, error : action.payload}\r\n        case PRODUCT_CREATE_REVIEW_RESET : \r\n        return {}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const productTopRatedReducer = (state ={ products:[]},action)=>{\r\n    switch(action.type){\r\n        case PRODUCT_TOP_REQUEST:\r\n            return {loading : true, products:[]}\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return {loading : false , products:action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return {loading:false, error : action.payload}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n\r\n}","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET  = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET  = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET  = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n\r\n\r\n\r\n","import { CART_ADD_ITEM, CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const cartReducer =(state = {cartItems :[],shippingAddress:{}},action ) =>{\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x=>x.product===item.product)\r\n\r\n\r\n            if(existItem){\r\n                return {\r\n                    ...state,\r\n                    cartItems   : state.cartItems.map(x=> x.product === existItem.product?item:x)\r\n                }\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    cartItems :[...state.cartItems,item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems :state.cartItems.filter((x)=>x.product!==action.payload)\r\n            }    \r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n            ...state,\r\n            shippingAddress: action.payload\r\n             }    \r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{\r\n            ...state,\r\n            paymentMethod: action.payload\r\n             }    \r\n        default:\r\n            return state\r\n        \r\n    }\r\n\r\n}","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS =  'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD =  'CART_SAVE_PAYMENT_METHOD'\r\n","import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LOGIN_FAIL,USER_LIST_RESET, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS,USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATEPROFILE_FAIL, USER_UPDATEPROFILE_REQUEST, USER_UPDATEPROFILE_SUCCESS, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_RESET, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\"\r\n\r\nexport const userLoginReducer = (state ={},action)=>{\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading : true}\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading : false , userInfo: action.payload}\r\n        case USER_LOGIN_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_LOGOUT:\r\n            return{}\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state ={},action)=>{\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading : true}\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading : false , userInfo: action.payload}\r\n        case USER_REGISTER_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_LOGOUT:\r\n            return{}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const userDetailsReducer = (state ={user:{}},action)=>{\r\n    switch(action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state,loading : true}\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading : false , user: action.payload}\r\n        case USER_DETAILS_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_DETAILS_RESET:\r\n            return {user :{}}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state ={},action)=>{\r\n    switch(action.type){\r\n        case USER_UPDATEPROFILE_REQUEST:\r\n            return {loading : true}\r\n        case USER_UPDATEPROFILE_SUCCESS:\r\n            return {loading : false , success:true, userInfo: action.payload}\r\n        case USER_UPDATEPROFILE_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const userListReducer = (state ={users:[]},action)=>{\r\n    switch(action.type){\r\n        case USER_LIST_REQUEST:\r\n            return {loading : true}\r\n        case USER_LIST_SUCCESS: \r\n            return {loading : false , users: action.payload}\r\n        case USER_LIST_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_LIST_RESET:\r\n            return {users: []}\r\n            default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state ={ },action)=>{\r\n    switch(action.type){\r\n        case USER_DELETE_REQUEST:\r\n            return {loading : true}\r\n        case USER_DELETE_SUCCESS: \r\n            return {loading : false , success: true}\r\n        case USER_DELETE_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state ={user:{}},action)=>{\r\n    switch(action.type){\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading : true}\r\n        case USER_UPDATE_SUCCESS: \r\n            return {loading : false , success: true}\r\n        case USER_UPDATE_FAIL:\r\n            return {loading:false, error: action.payload}\r\n        case USER_UPDATE_RESET:\r\n            return{\r\n                user:{}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATEPROFILE_REQUEST = 'USER_UPDATEPROFILE_REQUEST'\r\nexport const USER_UPDATEPROFILE_SUCCESS = 'USER_UPDATEPROFILE_SUCCESS'\r\nexport const USER_UPDATEPROFILE_FAIL = 'USER_UPDATEPROFILE_FAIL'\r\nexport const USER_UPDATEPROFILE_RESET = 'USER_UPDATEPROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n\r\n\r\n","import {ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_RESET} from '../constants/orderConstants'\r\n\r\n\r\n\r\nexport const orderCreateReducers = (state = {},action ) => {\r\n    switch(action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return{\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return{\r\n                loading :false,\r\n                success:true,\r\n                order :action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const orderDetailsReducers = (state = {loading:true,orderItems: [ ], shippingAddress :{}},action ) => {\r\n    switch(action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return{\r\n                loading :false,\r\n                order :action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {},action ) => {\r\n    switch(action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return{\r\n                \r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return{\r\n                loading :false,\r\n                success : true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const orderDeliverReducer = (state = { },action ) => {\r\n    switch(action.type){\r\n        case ORDER_DELIVER_REQUEST:\r\n            return{\r\n                \r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return{\r\n                loading :false,\r\n                success : true\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = {orders:[]},action ) => {\r\n    switch(action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return{\r\n                \r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return{\r\n                loading :false,\r\n                orders : action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {orders:[]}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const orderListReducer = (state = {orders:[]},action ) => {\r\n    switch(action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return{\r\n                \r\n                loading: true\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return{\r\n                loading :false,\r\n                orders : action.payload\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import React, {useState} from 'react'\r\nimport {Form , Button } from 'react-bootstrap'\r\n\r\n\r\nconst SearchBox = ({history}) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        if(keyword.trim()){\r\n            history.push(`/search/${keyword}`)\r\n        }else{\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control type='text' name='q' onChange={(e)=>setKeyword(e.target.value)}\r\n            placeholder='search' className='mr-sm-2 ml-sm-5'></Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>\r\n                Search\r\n            </Button>\r\n            \r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS,USER_LIST_RESET, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATEPROFILE_FAIL, USER_UPDATEPROFILE_REQUEST, USER_UPDATEPROFILE_SUCCESS, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\"\r\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const login = (email,password) => async(dispatch)=>{\r\n    try {\r\n        dispatch({\r\n            type:   USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/login',{email,password},config)\r\n        //localStorage.setItem('userInfo',JSON.stringify(data))\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n         localStorage.setItem('userInfo',JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = ()=>(dispatch ) =>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type : USER_LOGOUT})\r\n    dispatch({type : USER_DETAILS_RESET})\r\n    dispatch({type : ORDER_LIST_MY_RESET})\r\n    dispatch({type : USER_LIST_RESET})\r\n}\r\n\r\n\r\nexport const register = (name,email,password) => async(dispatch)=>{\r\n    try {\r\n        dispatch({\r\n            type:   USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users',{name,email,password},config)\r\n        //localStorage.setItem('userInfo',JSON.stringify(data))\r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n         localStorage.setItem('userInfo',JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:   USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo}}= getState() //gives accsess to loged in users object\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get (`/api/users/${id}`,config)\r\n        //localStorage.setItem('userInfo',JSON.stringify(data))\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:   USER_UPDATEPROFILE_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo}}= getState() //gives accsess to loged in users object\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put (`/api/users/profile`, user, config)\r\n        \r\n        dispatch({\r\n            type:USER_UPDATEPROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_UPDATEPROFILE_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:   USER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo}}= getState() //gives accsess to loged in users object\r\n\r\n        const config = {\r\n            headers:{\r\n                \r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get (`/api/users`, config)\r\n        \r\n        dispatch({\r\n            type:USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_LIST_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:   USER_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo}}= getState() //gives accsess to loged in users object\r\n\r\n        const config = {\r\n            headers:{\r\n                \r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n        \r\n        dispatch({\r\n            type:USER_DELETE_SUCCESS,\r\n            \r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_DELETE_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:   USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo}}= getState() //gives accsess to loged in users object\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/users/${user._id}`, user,config)\r\n        \r\n        dispatch({type:USER_UPDATE_SUCCESS})\r\n        dispatch({type:USER_DETAILS_SUCCESS , payload: data})\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_UPDATE_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Navbar, Nav , Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport {logout} from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n  const userLogin = useSelector(state =>state.userLogin)\r\n  const {userInfo} = userLogin\r\n  const logoutHandler = ()=>{\r\n    dispatch(logout())\r\n  }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant ='dark' expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n          <Navbar.Brand>Ara Ara Shopping</Navbar.Brand>\r\n          </LinkContainer>\r\n        \r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Route render ={({history})=><SearchBox history={history}/> }/>\r\n          <Nav className=\"ml-auto\">\r\n          <LinkContainer to='/cart'>\r\n            <Nav.Link><i className='fas fa-shopping-cart'></i>\r\n             Cart</Nav.Link>\r\n             </LinkContainer>\r\n             {userInfo ?(\r\n               <NavDropdown title={userInfo.name} id='username'>\r\n                 <LinkContainer to ='/profile'>\r\n                   <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                 </LinkContainer>\r\n                 <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n               </NavDropdown>\r\n             ): <LinkContainer to='/login'>\r\n             <Nav.Link><i className='fas fa-user'></i>Sign in</Nav.Link>\r\n             </LinkContainer>}\r\n             {userInfo && userInfo.isAdmin && (\r\n                 <NavDropdown title='ADMIN' id='adminmenu'>\r\n                 <LinkContainer to ='/adminuserlist'>\r\n                   <NavDropdown.Item>Users</NavDropdown.Item>\r\n                 </LinkContainer>\r\n                 <LinkContainer to ='/admin/productlist'>\r\n                   <NavDropdown.Item>Products</NavDropdown.Item>\r\n                 </LinkContainer>\r\n                 <LinkContainer to ='/admin/orderlist'>\r\n                   <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                 </LinkContainer>\r\n               </NavDropdown>\r\n\r\n             )}\r\n             \r\n            \r\n          </Nav>\r\n          \r\n        </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container,Row,Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col className = 'text-center py-3'>\r\n                    Copyright &copy; Shopping\r\n                </Col>\r\n            </Row>\r\n        \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({value,text,color}) => {\r\n    return (\r\n        <div className='rating'>\r\n            {/* 1star */}\r\n            <span>\r\n                <i style = {{color}} className={value>=1 ? 'fas fa-star' : value>=0.5?'fas fa-star-half-alt': 'far fa-star'}>\r\n\r\n                </i>\r\n            </span>\r\n            {/* 2star */}\r\n            <span>\r\n                <i style = {{color}} className={value>=2 ? 'fas fa-star' : value>=1.5?'fas fa-star-half-alt': 'far fa-star'}>\r\n                    \r\n                </i>\r\n            </span>\r\n            {/* 3star */}\r\n            <span>\r\n                <i style = {{color}} className={value>=3 ? 'fas fa-star' : value>=2.5?'fas fa-star-half-alt': 'far fa-star'}>\r\n                    \r\n                </i>\r\n            </span>\r\n            {/* 4 */}\r\n            <span>\r\n                <i style = {{color}} className={value>=4 ? 'fas fa-star' : value>=3.5?'fas fa-star-half-alt': 'far fa-star'}>\r\n                    \r\n                </i>\r\n            </span>\r\n            {/* 5 */}\r\n            <span>\r\n                <i style = {{color}} className={value>=5 ? 'fas fa-star' : value>=4.5?'fas fa-star-half-alt': 'far fa-star'}>\r\n                    \r\n                </i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color:'#ffa500'\r\n}\r\nRating.propTypes={\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string\r\n\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n//import products from '../products'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({product}) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to ={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top'/>\r\n            </Link>\r\n            <Card.Body>\r\n            <Link to ={`/product/${product._id}`}>\r\n                <Card.Title as='div'>\r\n                    <strong>{product.name}</strong>\r\n\r\n                </Card.Title>\r\n            </Link>\r\n            <Card.Text as='div'>\r\n               <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n            </Card.Text>\r\n            <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n        \r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport {Alert} from 'react-bootstrap'\r\n\r\nconst Message = ({variant,children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n            \r\n        </Alert>\r\n    )\r\n}\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {Spinner} from 'react-bootstrap' \r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation = 'border' role = 'status' style={{width:'100px',height:'100px',margin:'auto',display:'block'}}>\r\n            <span className='sr-only'>Loading..</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages,page, isAdmin=false,keyword=''}) => {\r\n    return pages>1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x=>(\r\n                <LinkContainer key={x + 1} to ={!isAdmin ? keyword ? `/search/${keyword}/page/${x+1}` :`/page/${x+1}`: `/admin/productlist/${x+1}`}>\r\n                    <Pagination.Item active={x+1===page}>{x+1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n        \r\n    \r\n}\r\n\r\nexport default Paginate\r\n","import {PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST,PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST,PRODUCT_CREATE_SUCCESS,PRODUCT_CREATE_REQUEST,PRODUCT_CREATE_FAIL,PRODUCT_UPDATE_SUCCESS,PRODUCT_UPDATE_FAIL,PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,PRODUCT_CREATE_REVIEW_FAIL,PRODUCT_CREATE_REVIEW_SUCCESS,PRODUCT_CREATE_REVIEW_RESET, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from '../constants/productConstants'\r\nimport axios from 'axios'\r\nexport const listProducts = (keyword = '',pageNumber ='')=>async(dispatch)=> {\r\n\r\n    try {\r\n        dispatch({ type:PRODUCT_LIST_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type : PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PRODUCT_LIST_FAIL,\r\n            payload:error.response&&error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const listProductDetails = (id)=>async(dispatch)=> {\r\n\r\n    try {\r\n        dispatch({ type:PRODUCT_DETAILS_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type : PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_FAIL,\r\n            payload:error.response&&error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:   PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo}}= getState() //gives accsess to loged in users object\r\n\r\n        const config = {\r\n            headers:{\r\n                \r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete (`/api/products/${id}`, config)\r\n        \r\n        dispatch({\r\n            type:PRODUCT_DELETE_SUCCESS,\r\n            \r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:PRODUCT_DELETE_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}   \r\n\r\nexport const createProduct = () => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:   PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo}}= getState() //gives accsess to loged in users object\r\n\r\n        const config = {\r\n            headers:{\r\n                \r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post (`/api/products`,  {},config)\r\n        \r\n        dispatch({\r\n            type:PRODUCT_CREATE_SUCCESS,\r\n            payload : data \r\n\r\n            \r\n        })       \r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:PRODUCT_CREATE_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}   \r\n\r\n\r\nexport const updateProduct = (product) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:   PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo}}= getState() //gives accsess to loged in users object\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put (`/api/products/${product._id}`, product,config)\r\n        \r\n        dispatch({\r\n            type:PRODUCT_UPDATE_SUCCESS,\r\n            payload : data \r\n\r\n            \r\n        })       \r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:PRODUCT_UPDATE_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}   \r\n\r\n\r\n\r\nexport const createProductReview = (productId , review ) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:   PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo}}= getState() //gives accsess to loged in users object\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post (`/api/products/${productId}/reviews`,review,config)\r\n        \r\n        dispatch({\r\n            type:PRODUCT_CREATE_REVIEW_SUCCESS,\r\n                   \r\n        })       \r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}   \r\n\r\n\r\nexport const listTopProducts = ()=>async(dispatch)=> {\r\n\r\n    try {\r\n        dispatch({ type:PRODUCT_TOP_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type : PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PRODUCT_TOP_FAIL,\r\n            payload:error.response&&error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n","import React,{useEffect} from 'react'\r\nimport {Link } from 'react-router-dom'\r\nimport {Carousel,Image} from 'react-bootstrap'\r\nimport {useDispatch} from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport {listTopProducts} from '../actions/productActions'\r\nimport { useSelector } from 'react-redux'\r\nimport { productTopRatedReducer } from '../reducers/productReducers'\r\n\r\n\r\nconst ProductCarousel = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const {loading,error,products} = productTopRated\r\n\r\n    useEffect(()=>{\r\n        dispatch(listTopProducts())\r\n    },[dispatch])\r\n    return loading ? <Loader/> :error ? <Message variant='danger'>{error}</Message>:\r\n    (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map(product=>(\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to ={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className = 'carousel-caption'>\r\n                            <h2>{product.name}(RS {product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n    ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport {Helmet} from 'react-helmet'\r\n\r\nconst Meta = ({title,description,keywords}) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content ={description}></meta>\r\n            <meta name='keywords' content = {keywords}/>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps ={\r\n    title: 'Welcome to Shopping',\r\n    description:'We Sell the best Products',\r\n    keywords:'Best of the best'\r\n}\r\nexport default Meta\r\n","import React, {useEffect} from 'react'\r\nimport {Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { Col, Pagination, Row } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport {listProducts} from '../actions/productActions'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport {Helmet} from 'react-helmet'\r\nimport Meta from '../components/Meta'\r\n\r\n\r\n\r\n\r\nconst HomeScreen = ({match}) => {\r\n    const keyword = match.params.keyword\r\n\r\n\r\n    const pageNumber = match.params.pageNumber ||1\r\n    const dispatch =useDispatch()\r\n\r\n    const productList = useSelector(state=> state.productList)\r\n    const {loading,error,products,page,pages} = productList\r\n    useEffect(()=>{\r\n        dispatch(listProducts(keyword, pageNumber))\r\n       \r\n    },[dispatch,keyword,pageNumber])\r\n    \r\n    return (\r\n        <>\r\n        <Meta />\r\n        {!keyword?<ProductCarousel/>:<Link to ='/' className='btn btn-light'>Go Back</Link>}\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message>:\r\n            (<>\r\n            <Row>\r\n                {products.map(product =>(\r\n                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                        <Product product={product}/>\r\n                    </Col>\r\n\r\n                ))}\r\n                \r\n            </Row> \r\n            <Paginate pages={pages} page={page} keyword={keyword?keyword:''}/>\r\n            </>\r\n            )\r\n            }\r\n        </>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React , {useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\n\r\nimport {Row,Col,Image,ListGroup,Card,Button, ListGroupItem, Form} from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport{ listProductDetails, createProductReview} from '../actions/productActions'\r\nimport { productDetailsReducer } from '../reducers/productReducers'\r\nimport {PRODUCT_CREATE_REVIEW_RESET} from '../constants/productConstants'\r\n\r\n\r\n\r\nconst ProductScreen = ({history,match}) => {\r\n    const [qty ,setQty] = useState(1)\r\n    const [rating ,setRating] = useState(0)\r\n    const [comment ,setComment] = useState('')\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const{loading,error,product} = productDetails\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const{error: errorProductReview,success: successProductReview} = productReviewCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const{userInfo} = userLogin\r\n\r\n    useEffect(()=>{\r\n        if(successProductReview){\r\n            alert('Review Submitted')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n       \r\n    },[dispatch,match,successProductReview])\r\n\r\n    const addToCartHandler = () =>{\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id,{\r\n            rating,\r\n            comment\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>Go Back</Link>\r\n            {loading? <Loader/>:error?<Message variant='danger'>{error}</Message>:(<>\r\n            <Meta title={product.name} />\r\n            <Row>\r\n                <Col md={6}>\r\n                <Image src={product.image} alt={product.name} fluid/>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroupItem>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                            <Rating value = {product.rating} text ={`${product.numReviews} reviews`}></Rating>\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                            Price: ${product.price}\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                            Description: ${product.description}\r\n                        </ListGroupItem>\r\n                    </ListGroup>\r\n                    \r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroupItem>\r\n                                <Row>\r\n                                    <Col>\r\n                                    Price:\r\n                                    </Col>\r\n                                    <Col>\r\n                                    <strong>${product.price}</strong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroupItem>\r\n\r\n                            <ListGroupItem>\r\n                                <Row>\r\n                                    <Col>\r\n                                    Status:\r\n                                    </Col>\r\n                                    <Col>\r\n                                    <strong>${product.countInStock>0?'In Stock':'Out of Stock'}</strong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroupItem>\r\n\r\n                            {product.countInStock>0&&(\r\n                                <ListGroupItem>\r\n                                    <Row>\r\n                                        <Col>Qty</Col>\r\n                                        <Col>\r\n                                        <Form.Control as='select' value={qty} onChange={(e)=>\r\n                                        setQty(e.target.value)}>\r\n                                            {\r\n                                            [...Array(product.countInStock).keys()].map(x=>(\r\n                                                <option key={x + 1} value ={x+1}>\r\n                                                    {x+1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroupItem>\r\n                            )}\r\n                            <ListGroupItem>\r\n                                <Button onClick={addToCartHandler} className='btn-block' type='button' disabled={product.countInStock===0}>\r\n                                    Add to cart\r\n                                </Button>\r\n                            </ListGroupItem>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <h2>Reviews</h2>\r\n                    {product.reviews.length===0 && <Message>No reviews</Message>}\r\n                    <ListGroup variant='flush'>\r\n                        {product.reviews.map((review) =>(\r\n                            <ListGroupItem key={review._id}>\r\n                                <strong>{review.name}</strong>\r\n                                <Rating value ={review.rating}/>\r\n                                <p>{review.comment}</p>\r\n                            </ListGroupItem>\r\n                            ))}\r\n                        <ListGroupItem>\r\n                            <h2>Write a review</h2>\r\n                            {userInfo ?(\r\n                                <Form onSubmit ={submitHandler}>\r\n                                    {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label>Rating</Form.Label>\r\n                                        <Form.Control as ='select' value={rating} onChange={(e)=>\r\n                                            setRating(e.target.value)}>\r\n                                            <option value=''>Select...</option>\r\n                                            <option value='1'>1 - Poor</option>\r\n                                            <option value='2'>2 - Fair</option>\r\n                                            <option value='3'>3 - Good</option>\r\n                                            <option value='4'>4 - Very Good</option>\r\n                                            <option value='5'>5 - Excellent</option>\r\n                                            </Form.Control>\r\n                                        \r\n                                    </Form.Group>\r\n                                    <Form.Group controlId='comment'>\r\n                                        <Form.Label>Comment</Form.Label>\r\n                                        <Form.Control as ='textarea' row='3' value={comment}\r\n                                        onChange={(e) => setComment(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type = 'submit' variant = 'primary'>Submit</Button>\r\n                                </Form>\r\n                            ): <Message>Pls  <Link to ='/login'>Sign in</Link>to write a review</Message> }\r\n                        </ListGroupItem>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n            </>\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {CART_ADD_ITEM,CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id,qty)=> async(dispatch,getState)=>{\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n    dispatch({\r\n        type : CART_ADD_ITEM,\r\n        payload:{\r\n            product: data._id,\r\n            name:data.name,\r\n            image:data.image,\r\n            price:data.price,\r\n            countInStock:data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\nexport const removeFromCart = (id)=>(dispatch,getState)=>{\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data)=>(dispatch)=>{\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n    localStorage.setItem('shippingAddress',JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data)=>(dispatch)=>{\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n    localStorage.setItem('paymentMethod',JSON.stringify(data))\r\n}\r\n","import React ,{useEffect} from 'react'\r\nimport {Link } from 'react-router-dom'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport {Row,Col,ListGroup,Image,Form,Button,Card, ListGroupItem} from 'react-bootstrap'\r\nimport {addToCart,removeFromCart} from '../actions/cartActions'\r\nimport Message from '../components/Message'\r\n\r\nconst CartScreen = ({match,location,history}) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state =>state.cart)\r\n    const {cartItems} = cart  \r\n\r\n    useEffect(()=>{\r\n        if(productId){\r\n            dispatch(addToCart(productId,qty))\r\n        }\r\n    },[dispatch,productId,qty])\r\n\r\n    const removeFromCartHandler = (id)=>{\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkOutHandler = ()=>{\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    \r\n    return (\r\n        <Row>\r\n            <Col md={8} >\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0?<Message>Your Cart is empty <Link to='/'>Go Back</Link></Message>\r\n                :(\r\n                    <ListGroup varient ='flush'>\r\n                        {cartItems.map(item=>(\r\n                            <ListGroupItem key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src ={item.image} alt={item.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                    <Form.Control as='select' value={item.qty} onChange={(e)=>\r\n                                        dispatch(addToCart(item.product,Number(e.target.value)))}>\r\n                                            {\r\n                                            [...Array(item.countInStock).keys()].map(x=>(\r\n                                                <option key={x + 1} value ={x+1}>\r\n                                                    {x+1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control> \r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type = 'button' varient = 'light' onClick={()=>removeFromCartHandler(item.product)}>\r\n                                            <i className = 'fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroupItem>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup varient ='flush'>\r\n                        <ListGroupItem>\r\n                            <h2>\r\n                                Subtotal ({cartItems.reduce((acc,item)=>acc+item.qty,0)}) items\r\n                            </h2>\r\n                            ${ cartItems.reduce((acc,item)=>acc + item.qty *item.price,0).toFixed(2)}\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                            <Button type = 'button' className='btn-block' disabled={cartItems.length===0} onClick={checkOutHandler}>\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroupItem>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n            \r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport {Container,Row,Col} from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className = 'justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React,{useState,useEffect} from 'react'\r\nimport  { Link } from 'react-router-dom'\r\nimport {Form,Button,Row,Col} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer  from '../components/FormContainer'\r\n\r\nimport {login} from '../actions/userActions'\r\nconst LoginScreen = ({location, history}) => {\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] =  useState('')\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n\r\n    const {loading, error, userInfo} = userLogin\r\n    console.log(userLogin)\r\n    const redirect = location.search ?  location.search.split('=')[1] : '/'\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect])\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        dispatch(login(email,password))\r\n    }\r\n\r\n\r\n    return( \r\n        <FormContainer>\r\n            <h1>Sign In </h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit ={submitHandler}>\r\n                <Form.Group controlId ='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type ='email' placeholder='Enter Email' value={email}\r\n                    onChange={(e)=>setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId ='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type ='password' placeholder='Enter Password' value={password}\r\n                    onChange={(e)=>setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' varient = 'primary'>Sign In</Button>\r\n            </Form>\r\n            <Row className = 'py-3'>\r\n                <Col>\r\n                New Customer? <Link to={redirect?`/register?redirect=${redirect}`:'/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    \r\n    )}\r\n\r\nexport default LoginScreen\r\n","import React,{useState,useEffect} from 'react'\r\nimport  { Link } from 'react-router-dom'\r\nimport {Form,Button,Row,Col} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer  from '../components/FormContainer'\r\n\r\nimport {register} from '../actions/userActions'\r\nconst RegisterScreen = ({location, history}) => {\r\n    const [name,setName] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] =  useState('')\r\n    const [ConfirmPassword,setConfirmPassword] =  useState('')\r\n    const [message,setMessage] =  useState(null)\r\n    const dispatch = useDispatch()\r\n    const userRegister = useSelector(state=>state.userRegister)\r\n\r\n    const {loading, error, userInfo} = userRegister\r\n    console.log(userRegister)\r\n    const redirect = location.search ?  location.search.split('=')[1] : '/'\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect])\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        if(password!==ConfirmPassword){\r\n            setMessage('Passwords do not match')\r\n        }\r\n        else{\r\n        dispatch(register(name,email,password))\r\n        }\r\n    }\r\n    \r\n\r\n    return( \r\n        <FormContainer>\r\n            <h1>Sign Up </h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit ={submitHandler}>\r\n            <Form.Group controlId ='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type ='name' placeholder='Enter Name' value={name}\r\n                    onChange={(e)=>setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId ='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type ='email' placeholder='Enter Email' value={email}\r\n                    onChange={(e)=>setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId ='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type ='password' placeholder='Enter Password' value={password}\r\n                    onChange={(e)=>setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId ='ConfirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type ='ConfirmPassword' placeholder='Confirm Password' value={ConfirmPassword}\r\n                    onChange={(e)=>setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' varient = 'primary'>Register</Button>\r\n            </Form>\r\n            <Row className = 'py-3'>\r\n                <Col>\r\n                Have an account? <Link to={redirect?`/login?redirect=${redirect}`:'/login'}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    \r\n    )}\r\n\r\nexport default RegisterScreen\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Table,Form,Button,Row,Col} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {getUserDetails,updateUserProfile} from '../actions/userActions'\r\nimport {listMyOrders} from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({location, history}) => {\r\n    const [name,setName] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] =  useState('')\r\n    const [ConfirmPassword,setConfirmPassword] =  useState('')\r\n    const [message,setMessage] =  useState(null)\r\n    const dispatch = useDispatch()\r\n    const userDetails = useSelector((state)=>state.userDetails)\r\n    const {loading, error, user} = userDetails\r\n\r\n    const userLogin = useSelector((state)=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userUpdateProfile = useSelector((state)=>state.userUpdateProfile)\r\n    const {success} = userUpdateProfile\r\n\r\n    const orderListMy = useSelector((state)=>state.orderListMy)\r\n    const {loading : loadingOrders, error: errorOrders, orders} = orderListMy\r\n    \r\n    useEffect(()=>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }else{\r\n            if(!user.name){\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[dispatch,history, userInfo, user])\r\n\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        if(password!==ConfirmPassword){\r\n            setMessage('Passwords do not match')\r\n        }\r\n        else{\r\n        dispatch(updateUserProfile({ id: user._id,name,email,password }))\r\n        }\r\n    }\r\n\r\n\r\n    return <Row>\r\n        <Col md={3}>\r\n        <h2>User Profile </h2>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {success && <Message variant='success'>Profile Updated</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit ={submitHandler}>\r\n            <Form.Group controlId ='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type ='name' placeholder='Enter Name' value={name}\r\n                    onChange={(e)=>setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId ='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type ='email' placeholder='Enter Email' value={email}\r\n                    onChange={(e)=>setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId ='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type ='password' placeholder='Enter Password' value={password}\r\n                    onChange={(e)=>setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId ='ConfirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type ='ConfirmPassword' placeholder='Confirm Password' value={ConfirmPassword}\r\n                    onChange={(e)=>setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' varient = 'primary'>Update</Button>\r\n            </Form>\r\n\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>My Orders</h2>\r\n            {loadingOrders ? <Loader /> :errorOrders ? <Message variant='danger'>{errorOrders}</Message>:(\r\n                <Table striped bordered hover responsive className = 'table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            {/* <th>DATE</th> */}\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order =>(\r\n                            <tr key={order._id}>\r\n                                {/* <td>{order.createdAt.substring(0,10)}</td> */}\r\n                                <td>{order._id}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                    <i className = 'fas fa-times' style ={{color: 'red'}}></i>\r\n                                )}</td>\r\n                                <td>{order.isDelivered ? order.deliveredAt.substring(0,10) : (\r\n                                    <i className = 'fas fa-times' style ={{color: 'red'}}></i>\r\n                                )}</td>\r\n                                <td>\r\n                                    <LinkContainer to ={`/order/${order._id}`}>\r\n                                        <Button varient = 'light'>Details</Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row>\r\n    \r\n    }\r\n\r\nexport default ProfileScreen\r\n","import {ORDER_CREATE_REQUEST,ORDER_CREATE_SUCCESS,ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL,ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_REQUEST} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = (order) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:   ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo}}= getState() //gives accsess to loged in users object\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post (`/api/orders`, order, config)\r\n        \r\n        dispatch({\r\n            type:ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_CREATE_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:   ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo}}= getState() //gives accsess to loged in users object\r\n\r\n        const config = {\r\n            headers:{\r\n                \r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get (`/api/orders/${id}`, config)\r\n        \r\n        dispatch({\r\n            type:ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_DETAILS_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (orderId, paymentResult) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:   ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo}}= getState() //gives accsess to loged in users object\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put (`/api/orders/${orderId}/pay`, paymentResult, config)\r\n        \r\n        dispatch({\r\n            type:ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_PAY_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}   \r\n\r\n\r\nexport const deliverOrder = (order) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:   ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo}}= getState() //gives accsess to loged in users object\r\n\r\n        const config = {\r\n            headers:{\r\n                \r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put (`/api/orders/${order._id}/deliver`, {}, config)\r\n        \r\n        dispatch({\r\n            type:ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_DELIVER_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}   \r\n\r\n\r\n\r\nexport const listMyOrders = () => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:   ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo}}= getState() //gives accsess to loged in users object\r\n\r\n        const config = {\r\n            headers:{\r\n                \r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get (`/api/orders/myorders`, config)\r\n        \r\n        dispatch({\r\n            type:ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_LIST_MY_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}   \r\n\r\n\r\n\r\n\r\nexport const listOrders = () => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:   ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo}}= getState() //gives accsess to loged in users object\r\n\r\n        const config = {\r\n            headers:{\r\n                \r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get (`/api/orders`, config)\r\n        \r\n        dispatch({\r\n            type:ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_LIST_FAIL,\r\n            payload:error.response&& error.response.data.message ? error.response.data.message :error.message\r\n        })\r\n    }\r\n}   ","import React from 'react'\r\nimport {Nav, NavDropdown} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2 ,step3 ,step4}) => {\r\n    return (\r\n        <Nav className = 'justify-content-center-mg-4'>\r\n            <Nav.Item>\r\n                {step1?(\r\n                    <LinkContainer to ='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ):<Nav.Link disabled> Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2?(\r\n                    <LinkContainer to ='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ):<Nav.Link disabled> Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3?(\r\n                    <LinkContainer to ='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ):<Nav.Link disabled> Payment</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4?(\r\n                    <LinkContainer to ='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ):<Nav.Link disabled> Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n            \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","\r\nimport React,{useState} from 'react'\r\nimport {Form,Button} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport FormContainer  from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {saveShippingAddress} from '../actions/cartActions'\r\n\r\n\r\nconst ShippingScreen = ({history }) => {\r\n    const cart = useSelector(state=>state.cart)\r\n    const{shippingAddress} = cart\r\n\r\n\r\n    const [address,setAddress] = useState(shippingAddress.address)\r\n    const [city,setCity] = useState(shippingAddress.city)\r\n    const [postalCode,setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country,setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address,city,postalCode,country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId ='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control type ='text' placeholder='Enter Address' value={address} required\r\n                    onChange={(e)=>setAddress(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n            <Form.Group controlId ='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control type ='text' placeholder='Enter City' value={city} required\r\n                    onChange={(e)=>setCity(e.target.value)}></Form.Control></Form.Group>\r\n            <Form.Group controlId ='postalCode'>\r\n                    <Form.Label>PostalCode</Form.Label>\r\n                    <Form.Control type ='text' placeholder='Enter Postal Code' value={postalCode} required\r\n                    onChange={(e)=>setPostalCode(e.target.value)}></Form.Control></Form.Group>\r\n            \r\n            <Form.Group controlId ='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control type ='text' placeholder='Enter Country' value={country} required\r\n                    onChange={(e)=>setCountry(e.target.value)}></Form.Control></Form.Group>\r\n            \r\n                \r\n            <Button type = 'submit' variant ='primary'>Continue</Button>    \r\n                \r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","\r\nimport React,{useState} from 'react'\r\nimport {Form,Button,Col} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport FormContainer  from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {savePaymentMethod} from '../actions/cartActions'\r\n\r\n\r\nconst PaymentScreen = ({history }) => {\r\n    const cart = useSelector(state=>state.cart)\r\n    const{shippingAddress} = cart\r\n\r\n    if(!shippingAddress){\r\n        history.push('/shipping')\r\n    }\r\n\r\n\r\n    const [paymentMethod,setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n            <Form.Group>\r\n                <Form.Label as ='legend'>Select Method</Form.Label>\r\n            \r\n            <Col>\r\n                <Form.Check type='radio' label='PayPal or Credit Card' id='PayPal' name='paymentMethod' value='PayPal' checked onChange={(e)=>\r\n                setPaymentMethod(e.target.value)}></Form.Check>\r\n                <Form.Check type='radio' label='Google Pay' id='Google Pay' name='paymentMethod' value='GooglePay' onChange={(e)=>\r\n                setPaymentMethod(e.target.value)}></Form.Check>\r\n\r\n            </Col>\r\n            </Form.Group>\r\n            \r\n                \r\n            <Button type = 'submit' variant ='primary'>Continue</Button>    \r\n                \r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React,{useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button,Row,Col,ListGroup,Image,Card, ListGroupItem} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Message  from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {createOrder} from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state=>state.cart)\r\n    //Calculate Prices \r\n    const addDecimals = (num)=>{\r\n        return (Math.round(num*100) / 100).toFixed(2)\r\n    }\r\n    \r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc,item)=>acc+item.price*item.qty,0))\r\n\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ?0 : 100)\r\n\r\n    cart.taxPrice = addDecimals(Number((0.15* cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice))\r\n\r\n    \r\n    const orderCreate = useSelector(state =>state.orderCreate)\r\n    const {order,success,error} = orderCreate\r\n\r\n    useEffect(()=>{\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line \r\n    },[history,success])\r\n\r\n\r\n    const placeOrderHandler =()=>{\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress : cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice : cart.itemsPrice,\r\n            shippingPrice : cart.shippingPrice,\r\n            taxPrice : cart.taxPrice,\r\n            totalPrice : cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    \r\n    \r\n    return (\r\n        <>\r\n        <CheckoutSteps step1 step2 step3 step4/>\r\n        <Row>\r\n            <Col md={8}>\r\n                <ListGroup variant = 'flush'>\r\n                    <ListGroupItem>\r\n                        <h2>Shipping</h2>\r\n                        <p>\r\n                            <strong>Address:</strong>\r\n                            {cart.shippingAddress.address},\r\n                            {cart.shippingAddress.city},\r\n                            {cart.shippingAddress.postalCode},\r\n                            {cart.shippingAddress.country},\r\n                            \r\n                        </p>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <h2>Payment Method</h2>\r\n                        <strong>Method:</strong>\r\n                        {cart.paymentMethod}\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem>\r\n                        <h2>Order Items</h2>\r\n                        {cart.cartItems.length===0 ? <Message>Your Cart is empty</Message>:(\r\n                            <ListGroup variant = 'flush'>\r\n                                {cart.cartItems.map((item,index)=>(\r\n                                    <ListGroupItem key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to ={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} =${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroupItem>\r\n                            ))}\r\n                            </ListGroup>\r\n                        )}\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup>\r\n                        <ListGroupItem>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroupItem>\r\n                        <ListGroupItem> \r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${cart.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroupItem>\r\n                        <ListGroupItem> \r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${cart.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroupItem>\r\n                        <ListGroupItem> \r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${cart.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroupItem>\r\n                        <ListGroupItem> \r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${cart.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                            {error && <Message variant='danger'>{error}</Message>}\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                            <Button type = 'button' className='btn-block' disabled = {cart.cartItems===0} onClick={placeOrderHandler}>Place Order</Button>\r\n                        </ListGroupItem>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React,{useState , useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {PayPalButton} from 'react-paypal-button-v2'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button,Row,Col,ListGroup,Image,Card, ListGroupItem} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Message  from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {getOrderDetails , payOrder,deliverOrder} from '../actions/orderActions'\r\nimport {ORDER_PAY_RESET,ORDER_DELIVER_RESET} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({match,history}) => {\r\n    const orderId = match.params.id\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const orderDetails = useSelector(state =>state.orderDetails)\r\n    const {order,loading,error} = orderDetails\r\n\r\n    const orderPay = useSelector(state =>state.orderPay)\r\n    const {loading: loadingPay,success : successPay} = orderPay\r\n\r\n    const userLogin = useSelector(state =>state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    \r\n    const orderDeliver = useSelector(state =>state.orderDeliver)\r\n    const {loading: loadingDeliver,success : successDeliver} = orderDeliver\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n        const addPayPalScript = async ()=>{\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () =>{\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        \r\n        if(!order || successPay ||successDeliver) {\r\n            dispatch({ type : ORDER_PAY_RESET})\r\n            dispatch({ type : ORDER_DELIVER_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        }\r\n        else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPayPalScript()\r\n            }\r\n        }else{\r\n            setSdkReady(true)\r\n        }\r\n    }, [dispatch,order, successPay,successDeliver,orderId]) \r\n    const succesPaymentHandler =(paymentResult) =>{\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n\r\n    }\r\n\r\n    const deliverHandler = ()=>{\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n\r\n    return loading? <Loader/> : error ? <Message>{error}</Message>:<>\r\n        <h1>Order {order._id}</h1>\r\n\r\n        <Row>\r\n            <Col md={8}>\r\n                <ListGroup variant = 'flush'>\r\n                    <ListGroupItem>\r\n                        <h2>Shipping</h2>\r\n                        <p><strong>Name : </strong>{order.user.name}</p>\r\n                        <strong>Email : </strong>\r\n                        <p><a href = {`mail to : ${order.user.email}`}> {order.user.email}</a></p>\r\n                        <p>\r\n                            <strong>Address:</strong>\r\n                            {order.shippingAddress.address},\r\n                            {order.shippingAddress.city},\r\n                            {order.shippingAddress.postalCode},\r\n                            {order.shippingAddress.country},\r\n                            \r\n                        </p>\r\n                        {order.isDelivered ? (<Message variant = 'success'>Delivered On {order.deliveredAt}</Message>):(<Message variant ='danger'>yet to be Delivered</Message>)}\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <h2>Payment Method</h2>\r\n                        <p> \r\n                        <strong>Method:</strong>\r\n                        {order.paymentMethod}\r\n                        </p>\r\n{order.isPaid ? <Message variant = 'success'>Paid On {order.paidAt}</Message>:<Message variant ='danger'>Not Paid</Message>}\r\n                    </ListGroupItem>\r\n\r\n                    <ListGroupItem>\r\n                        <h2>Order Items</h2>\r\n                        {order.orderItems.length===0 ? <Message>Order is empty</Message>:(\r\n                            <ListGroup variant = 'flush'>\r\n                                {order.orderItems.map((item,index)=>(\r\n                                    <ListGroupItem key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to ={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} =${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroupItem>\r\n                            ))}\r\n                            </ListGroup>\r\n                        )}\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup>\r\n                        <ListGroupItem>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroupItem>\r\n                        <ListGroupItem> \r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${order.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroupItem>\r\n                        <ListGroupItem> \r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${order.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroupItem>\r\n                        <ListGroupItem> \r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${order.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroupItem>\r\n                        <ListGroupItem> \r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${order.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroupItem>\r\n                        {!order.isPaid && (\r\n                            <ListGroupItem>\r\n                                {loadingPay && <Loader/>}\r\n                                {!sdkReady ? <Loader /> : (\r\n                                    <PayPalButton  amount ={order.totalPrice} onSuccess = {succesPaymentHandler} />\r\n                                )}\r\n                            </ListGroupItem>\r\n                        )}\r\n                        {loadingDeliver && <Loader/>}\r\n                        {userInfo && userInfo.isAdmin&&order.isPaid &&!order.isDelivered&&(\r\n                            <ListGroupItem>\r\n                                <Button type='button' className = 'btn btn-block' onClick={deliverHandler}>Mark As Delivered</Button>\r\n                            </ListGroupItem>\r\n                        )}\r\n                       \r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n    \r\n}\r\n\r\nexport default OrderScreen\r\n","import React,{useEffect} from 'react'\r\nimport  { LinkContainer } from 'react-router-bootstrap'\r\nimport {Table,Button} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {listUsers, deleteUser} from '../actions/userActions'\r\n\r\n\r\nconst UserListScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading,error,users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n    \r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success : successDelete} = userDelete\r\n\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin){\r\n        dispatch(listUsers())\r\n        }\r\n        else{\r\n            history.push('/login')\r\n        }\r\n\r\n    },[dispatch,history,successDelete,userInfo])\r\n    const deleteHandler =(id) =>{\r\n        if(window.confirm('Confirm Delete?')){\r\n        dispatch(deleteUser(id))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message>\r\n            :(\r\n                <Table striped bordered hover responsive className ='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user.id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href ={`mailto : ${user.email}`}>{user.email}</a></td>\r\n                                <td>\r\n                                    {user.isAdmin ? (<i className='fas fa-check' style={\r\n                                        {color:'green'}}></i>) : (<i className ='fas fa-times' style = {{color:'red'}}></i>)}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to ={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant = 'light' className = 'btn-sm'>\r\n                                            <i className = 'fas fa-edit'></i>\r\n                                        </Button>\r\n\r\n                                    </LinkContainer>\r\n                                    <Button variant ='danger' className= 'btn-sm' onClick={()=>\r\n                                    deleteHandler(user._id)}>\r\n                                        <i className = 'fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React,{useEffect} from 'react'\r\nimport  { LinkContainer } from 'react-router-bootstrap'\r\nimport {Table,Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport {listProducts , deleteProduct, createProduct} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET} from '../constants/productConstants'\r\n\r\n\r\nconst ProductListScreen = ({history, match}) => {\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const dispatch = useDispatch()\r\n    \r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {loading : loadingDelete,error : errorDelete, success: successDelete} = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {loading : loadingCreate,error : errorCreate, success: successCreate, product : createdProduct} = productCreate\r\n\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading,error, products,page,pages} = productList\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n    \r\n   \r\n\r\n    useEffect(()=>{\r\n        dispatch({ type : PRODUCT_CREATE_RESET})\r\n        if(!userInfo||!userInfo.isAdmin){\r\n        history.push('/login')\r\n        }\r\n        \r\n        if(successCreate){\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        }\r\n        else{\r\n            dispatch(listProducts('',pageNumber))\r\n        }\r\n\r\n    },[dispatch ,history , userInfo,successDelete,successCreate,createdProduct,pageNumber])\r\n    const deleteHandler =(id) =>{\r\n        if(window.confirm('Confirm Delete?')){\r\n        dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () =>{\r\n        dispatch(createProduct())\r\n    }\r\n    return (\r\n        <>\r\n            <Row className = 'align-items-center'>\r\n                <Col>\r\n                <h1>Products</h1>\r\n                </Col>\r\n                <Col className = 'text-right'>\r\n                    <Button className = 'my-3' onClick = {createProductHandler}>\r\n                        <i className = 'fas fa-plus'></i>Create Product\r\n                    </Button>\r\n                </Col>\r\n\r\n            </Row>\r\n            {loadingDelete && <Loader/> }\r\n            {errorDelete && <Message variant = 'danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader/> }\r\n            {errorCreate && <Message variant = 'danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message>\r\n            :(\r\n                <>\r\n                <Table striped bordered hover responsive className ='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products.map(product => (\r\n                            <tr key={product.id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>${product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                               \r\n                                <td>\r\n                                    <LinkContainer to ={`/admin/product/${product._id}/edit`}>\r\n                                        <Button variant = 'light' className = 'btn-sm'>\r\n                                            <i className = 'fas fa-edit'></i>\r\n                                        </Button>\r\n\r\n                                    </LinkContainer>\r\n                                    <Button variant ='danger' className= 'btn-sm' onClick={()=>\r\n                                    deleteHandler(product._id)}>\r\n                                        <i className = 'fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate pages ={pages} page ={page} isAdmin={true}/>\r\n                </>\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n    ","import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport  { Link } from 'react-router-dom'\r\nimport {Form,Button} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer  from '../components/FormContainer'\r\n\r\nimport {listProductDetails,updateProduct} from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\n\r\nconst ProductEditScreen = ({match, history}) => {\r\n    const productId = match.params.id\r\n    const [name,setName] = useState('')\r\n    const [price,setPrice] = useState(0)\r\n    const [image,setImage] =  useState('')\r\n    const [brand,setBrand] =  useState('')\r\n    const [category,setCategory] =  useState('')\r\n    const [countInStock,setCountInStock] =  useState(0)\r\n    const [description,setDescription] =  useState('')\r\n    const [uploading,setUploading] =  useState(false)\r\n\r\n    \r\n    \r\n    const dispatch = useDispatch()\r\n    \r\n    const productDetails = useSelector(state=>state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n\r\n    const productUpdate = useSelector(state=>state.productUpdate)\r\n    const {loading : loadingUpdate, error: errorUpdate,success : successUpdate} = productUpdate\r\n\r\n   \r\n    useEffect(()=>{\r\n        if(successUpdate){\r\n            dispatch({type : PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        }\r\n        else{\r\n            if(!product.name||product._id!==productId){\r\n                dispatch(listProductDetails(productId))\r\n    \r\n            }\r\n            else{\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n\r\n        }\r\n          \r\n        \r\n        \r\n    \r\n    },[dispatch,product,productId,history,successUpdate])\r\n\r\n    const uploadFileHandler = async(e)=>{\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image',file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers:{\r\n                    'Content-Type' : 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const {data} = await axios.post('/api/upload',formData,config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id : productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    \r\n    \r\n    }\r\n    return( \r\n        <>\r\n        <Link to ='/admin/productlist' className ='btn btn-light my-3'></Link>\r\n        <FormContainer>\r\n            <h1>Edit Product </h1>\r\n            {loadingUpdate && <Loader/>}\r\n            {errorUpdate && <Message variant = 'danger'>{errorUpdate}</Message>}\r\n            \r\n            {loading ? <Loader/> : error ? <Message varient = 'danger'>{error}</Message>:(\r\n                <Form onSubmit ={submitHandler}>\r\n                <Form.Group controlId ='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type ='name' placeholder='Enter Name' value={name}\r\n                        onChange={(e)=>setName(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId ='price'>\r\n                        <Form.Label>Price </Form.Label>\r\n                        <Form.Control type ='number' placeholder='Enter Price' value={price}\r\n                        onChange={(e)=>setPrice(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId ='image'>    \r\n                    <Form.Label>image </Form.Label>\r\n                        <Form.Control type ='text' placeholder='Enter image url' value={image}\r\n                        onChange={(e)=>setImage(e.target.value)}></Form.Control>\r\n                        <Form.File id = 'image-file' label ='Choose File' custom onChange={uploadFileHandler}></Form.File>\r\n                        {uploading && <Loader/>}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId ='brand'>    \r\n                    <Form.Label>Brand </Form.Label>\r\n                        <Form.Control type ='text' placeholder='Enter brand' value={brand}\r\n                        onChange={(e)=>setBrand(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId ='countInStock'>\r\n                        <Form.Label>countInstock </Form.Label>\r\n                        <Form.Control type ='number' placeholder='Enter countInstock' value={countInStock}\r\n                        onChange={(e)=>setCountInStock(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId ='category'>    \r\n                    <Form.Label>Category </Form.Label>\r\n                        <Form.Control type ='text' placeholder='Enter category' value={category}\r\n                        onChange={(e)=>setCategory(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId ='description'>    \r\n                    <Form.Label>Description </Form.Label>\r\n                        <Form.Control type ='text' placeholder='Enter description' value={description}\r\n                        onChange={(e)=>setDescription(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    \r\n                    <Button type='submit' varient = 'primary'>Update</Button>\r\n                </Form>\r\n            )}\r\n            \r\n           \r\n        </FormContainer>\r\n        </>\r\n       \r\n    \r\n    )}\r\n\r\nexport default ProductEditScreen\r\n","import React,{useState,useEffect} from 'react'\r\nimport  { Link } from 'react-router-dom'\r\nimport {Form,Button} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer  from '../components/FormContainer'\r\n\r\nimport {getUserDetails,updateUser} from '../actions/userActions'\r\nimport {USER_UPDATE_RESET} from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({match, history}) => {\r\n    const userId = match.params.id\r\n    const [name,setName] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] =  useState('')\r\n    const [isAdmin,setIsAdmin] = useState(false)\r\n    \r\n    const dispatch = useDispatch()\r\n    \r\n    const userDetails = useSelector(state=>state.userDetails)\r\n    const {loading, error, user} = userDetails\r\n\r\n    const userUpdate = useSelector(state=>state.userUpdate)\r\n    const {loading : loadinUpdate, error : errorUpdate, success : successUpdate} = userUpdate\r\n    \r\n    console.log(userDetails)\r\n    \r\n\r\n    useEffect(()=>{\r\n        if(successUpdate){\r\n            dispatch({type : USER_UPDATE_RESET})\r\n            history.push('/adminuserlist')\r\n        }\r\n        else{\r\n            if(!user.name||user._id!==userId){\r\n                dispatch(getUserDetails(userId))\r\n    \r\n            }\r\n            else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n        \r\n    \r\n    },[dispatch,user,userId,successUpdate,history])\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id: userId,name,email,isAdmin}))\r\n    }\r\n\r\n    return( \r\n        <>\r\n        <Link to ='/adminuserlist' className ='btn btn-light my-3'></Link>\r\n        <FormContainer>\r\n            <h1>Edit User </h1>\r\n            {loadinUpdate && <Loader/> }\r\n            {errorUpdate && <Message varient = 'danger'>{errorUpdate}</Message>}\r\n            \r\n            {loading ? <Loader/> : error ? <Message varient = 'danger'>{error}</Message>:(\r\n                <Form onSubmit ={submitHandler}>\r\n                <Form.Group controlId ='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type ='name' placeholder='Enter Name' value={name}\r\n                        onChange={(e)=>setName(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId ='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type ='email' placeholder='Enter Email' value={email}\r\n                        onChange={(e)=>setEmail(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId ='isAdmin'>\r\n                        \r\n                        <Form.Check type ='checkbox' label = 'isAdmin' checked ={isAdmin}\r\n                        onChange={(e)=>setIsAdmin(e.target.checked)}></Form.Check>\r\n                    </Form.Group>\r\n    \r\n    \r\n                    <Button type='submit' varient = 'primary'>Update</Button>\r\n                </Form>\r\n            )}\r\n            \r\n           \r\n        </FormContainer>\r\n        </>\r\n       \r\n    \r\n    )}\r\n\r\nexport default UserEditScreen\r\n","import React,{useEffect} from 'react'\r\nimport  { LinkContainer } from 'react-router-bootstrap'\r\nimport {Table,Button} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {listOrders} from '../actions/orderActions'\r\n\r\n\r\nconst OrderListScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n    const orderList = useSelector(state => state.orderList)\r\n    const {loading,error,orders} = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n    \r\n\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin){\r\n        dispatch(listOrders())\r\n        }\r\n        else{\r\n            history.push('/login')\r\n        }\r\n\r\n    },[dispatch,history,userInfo])\r\n    \r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message>\r\n            :(\r\n                <Table striped bordered hover responsive className ='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            {/* <th>DATE</th> */}\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map((order) => (\r\n                            <tr key={order.id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user&&order.user.name}</td>\r\n                                {/* <td>{order.createdAt.substring(0,10)}</td> */} \r\n                                <td>${order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ? (order.paidAt.substring(0,10)) : (<i className ='fas fa-times' style = {{color:'red'}}></i>)}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ? (order.deliveredAt.substring(0,10)) : (<i className ='fas fa-times' style = {{color:'red'}}></i>)}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to ={`/order/${order._id}`}>\r\n                                        <Button variant = 'light' className = 'btn-sm'>\r\n                                            Details\r\n                                        </Button>\r\n\r\n                                    </LinkContainer>\r\n                                    \r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react';\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\n\n\n\n\n\nconst App = () => {\n  return (\n    <Router>\n    <Header/>\n    <main className='py-3'>\n      <Container>\n        <Route path='/' component={HomeScreen} exact/>\n        <Route path='/page/:pageNumber' component={HomeScreen} exact/>\n        <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact/>\n        <Route path='/search/:keyword' component={HomeScreen} exact />\n        <Route path='/shipping' component={ShippingScreen} />\n        <Route path='/placeorder' component={PlaceOrderScreen} />\n        <Route path='/order/:id' component={OrderScreen} />\n        <Route path='/payment' component={PaymentScreen} />\n        <Route path='/login' component={LoginScreen} />\n        <Route path='/register' component={RegisterScreen} />\n        <Route path='/profile' component={ProfileScreen} />\n        <Route path='/product/:id' component={ProductScreen} />\n        <Route path='/adminuserList' component={UserListScreen} />\n        <Route path='/admin/productlist' component={ProductListScreen} exact />\n        <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\n        <Route path='/admin/orderlist' component={OrderListScreen} />\n        <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n        <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n        \n\n        <Route path='/cart/:id?' component={CartScreen} />\n        \n\n\n      </Container>\n    \n    </main>\n    <Footer/>\n       \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport provider, { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}